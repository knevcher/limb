0.7.0-beta - 31 December 2007 (r6672)
==================================================
-- all old style commands removed.
-- lmb*CommandController removed since commands removed and since we never actually used them since lmbController was implemented.
-- lmbController :: performCommand() removed
-- lmbWebAppTools passed dummy template path to dummy view
-- minor fixes due to lmbView class changes
-- lmbAbstractController merged into lmbController. lmbAbstractController removed.
-- FallbackToViewController now extends lmbController
-- <flash_box> tag removed
-- flashbox fetchers removed. Please use raw php blocks instead.
-- lmbMessageBox :: getUnifiedList() method added that copies functionality of lmbFlashBoxFetcher
-- {{route_url}} macro tag added that can be used to echo an URL composed with routes
-- added possibility to use spaces inside route_url, route_url_set tags in 'params' attribute, e.g. <route_url params="controller: some_controller, action: some_action">
-- fixed a bug with finding template by alias if controller action name constains percentage symbol
-- added new FallbackToViewController that allows to render any view template if uri path is matching to any template. To use this class pass "fallback_to_view" as a second parameter to lmbRequestDispatchingFilter filter
-- lmbController :: flashErrorAndRedirect(), :: flashAndRedirect() methods added
-- lmbWebAppTools :: renderView(..) removed as not really needed
-- adding default macro.conf.php
-- removing unneccessary includes from common.inc.php
-- adding alias <find:param> for <find:params> tag
-- removing deprecated setViewFormDatasource

0.6.1-alpha - 9 July 2007 (r6119)
==================================================
-- lmbRequestExtractor.interface.php removed since we not use it anymore

0.6.0-alpha - 6 July 2007 (r6097)
==================================================
-- lmbErrorHandlingFilter added instead of lmbUncaughtExceptionHandlingFilter
-- lmbUncaughtExceptionHandlingFilter extends lmbErrorHandlingFilter, it's deprecated and will be removed someday
-- lmbQueryBasedFetcher, lmbTableRecordsFetcher, lmbTableRowFetcher and lmbSimpleFetcher removed since we don't really need them.
-- lmbFetcher :: extractOrderPairsFromString() added from removed lmbOrdersQueryModifier
-- lmbUncaughtExceptionHandlingFilter now accepts $error500_page parameter in constructor. Using this parameter you can pass the path to .html page with 500 error description. This should be an absolute path to static html page.
-- lmbUncaughtExceptionHandlingFilter also takes into account LIMB_APP_MODE constant to set it's mode. LIMB_APP_MODE constant should have 'devel' or 'production' value. On 'devel' mode all errors and uncaught exceptions will be displayed with backtrace but in 'production' mode - the contents of error500_page will be displayed instead.
-- better tests isolation in case when there's no compatible db test dump
-- lmbController::closePopup() writes code in response only if $in_popup is set to true
-- added new property to lmbController `in_popup` (true by default)
-- adding phpdoc header to modules
-- adding dummy phpdoc block to each class
-- lmbController :: forwardTo500() added, it forwards to ServerErrorController
-- ServerErrorController class and server_error.html template added
-- experimental lmbController :: forward($controller, $action) added, locates $controller object, invokes its performAction() and returns result
-- lmbController :: forwardTo404() added, it forwards to NotFoundController
-- lmbWebAppTools :: createController() checks if such a class already exists
-- fixed <find:params> tag
-- lmbController passes its local attributes to view automatically
-- <route_url> tag now can optionally accepts "skip_controller" attribute. If this attribute has "true" value then dispatched controller will not be attached to params array what passed to lmbToolkit :: instance()->getRouteUrl() method.
-- initial mixins support added into lmbAbstractController, mixed instance can be accessed via $mixed attribute
-- lmbController :: closePopup() javascript better window.opener checks
-- added skip_controller argument flag to getRoutesUrl() method which prevent trowing exception when controller name not specified
-- added skip_controller attribute to tag <route_url_set>
-- a bit more optimal LIMB_HTTP* constant checks
-- invalid declaration of LIMB_HTTP_OFFSET now yields exception
-- lmbErrorGuard uses more general way for registering callbacks
-- lmbDelegateHaltException moved to WEB_APP package
-- lmbUncaughtExceptionHandlingFilter uses new lmbErrorGuard for fatal errors and exceptions tracking
-- using lmbDelegate instead of removed lmbDelegateList
-- added an alias <ar:fetch> for <active_record:fetch> tag
-- lmbDefaultLocaleFilter fixed(WAP-4)
-- weird $code->registerInclude(..) fix in ip.filter.php
-- adding LOG package dependency
-- lmbUncaughtExceptionHandlingFilter uses getLog() toolkit facility from LOG package
-- lmbWebAppTools :: getView() uses LIMB_VAR_DIR . '/compiled/' cache dir

0.5.0-alpha - 9 April 2007 (r5578)
==================================================
-- changes due to datasource package cleanup and unification(DS-1)
-- message box obsolete stuff removed, use flash box facility instead
-- lmbWebAppErrorList removed
-- flash box fills 'message' property, 'text' property is still here for BC
-- lmbWactView doesn't throw exception on render(), empty string returned
-- lmbController fills response with default output message if there were no response at all(this way developer sees some message rather than an unfriendly blank screen)
-- initial cli/WebAppCliCmd added, currently only 'limb web_app create' command is supported
-- moving examples/empty_app => skel

0.4.0-alpha - 2 April  2007 (r5454)
==================================================
-- added ability for Limb3 based applications to work in a subfolder of DocumentRoot (the code was ported from Limb2)
-- CRUD example removed from WEB_APP package. Now we have a copy of it at https://svn.limb-project.com/limb/3.x/examples/crud
-- I18N tags and filters moved to I18N package
-- Most of fetch, all iterator and all perform tags were moved to WACT package.
-- all view stuff moved to new VIEW package
-- changes due to global Limb3 functions renamings
-- lmbFormCommand, lmbController :: setViewFormDatasource() is deprecated now,  setFormDatasource() added and should be used instead
-- adding qt tranlations file web_app.en_US.ts
-- removing junky src/util/popup.inc.php
-- using proper translations in validation rules
-- lmbFormCommand properly initiates default validator and error_list now.
-- database stuff removed from lmbWebAppTools, all moved to DBAL package

!! Minor BC break !!
-- lmbSessionMessageBox -> lmbFlashBox
-- lmbSessionMessageBoxErrorsFetcher -> lmbFlashBoxErrorsFetcher
-- lmbSessionMessageBoxMessagesFetcher -> lmbFlashBoxMessagesFetcher
-- lmbSessionMessageBoxFetcher -> lmbFlashBoxFetcher
-- now all flash box fetchers return dataset with "text" field in every record instead of "error", "message" and "text" in different cases
-- new <flash_box> and <message_box> tags added. These tags are replacements for long constructions like <fetch using='limb/web_app/src/fetcher/lmbSessionMessageBoxFetcher' target='messages' />.
-- lmbWebAppTools :: getSessionMessageBox() -> :: getFlashBox()

0.3.0-alpha - 13 March 2007 (r5232)
==================================================
-- removing active_record and dbal dependency from web_app package. Keeping BC, including active_record/common.inc.php and dbal/common.inc.php only if they're present
-- <fetch:param> tag now has alias: <fetch:params>
-- <fetch> tag now allows to use "one" attribute instead of "first"
-- removed <limb:request_transfer> tag since we never used it
-- <site_branch> and <site_branch_selector> tags moved to WACT
-- lmbFetcher :: _createDataSet() now can return arrays. The result will we wrapped with lmbPagedArrayDataset automatically. If it returns scalar value then empty lmbPagedArrayDataset is returned.
-- LIMB_USE_DB_DRIVER => LIMB_SESSION_USE_DB_DRIVER !!!
-- lmbSessionStartupFilter refactorings due to SESSION package changes
-- <fetch>, <fetch:transfer>, <iterator:transfer> now extends new lmbFetchingTag class.  lmbFetchingTag introduces new "to" attribute that tell where to put dataset. "to" attribute should be a valid DBE. "target" attribute is a special case of "to" attribute: "target" attribute value becomes (value) and uses as "to" attribute value after transformation.
-- lmbWebApplicationSandbox added, this is an application container that can be used for integration testing of whole applications or controllers. It accepts user reguest and registers fake response and session instances in the toolkit before processing sandboxed application. Once the application processed it merely returns the response object. Application object is optional and if skipped lmbWebApplication is used.
-- calling htmlspecialchars for proper encoding of html symbols in changelog, description and summary during package creation
-- many other small fixes

0.2.0-alpha - 16 February 2007 (r5095)
==================================================
-- using PATH_SEPARATOR  constant for setting include_path in setup.php
-- <fetch> tag alias for "first" attribute called "one" added. Now you can use <fetch one using='...'.../>
-- lmbUniqueTableFieldRule :: __construct(..) allows to omit 3d argument $table_field. $field_name will be used in this case.
-- lmbWebAppTools :: redirect() takes additional string parameter $append which appends to redirect string now
-- a more logical layout of lmbViewRenderingFilter(thanks to Eugene444)
-- added connection and db object to lmbWebAppTestCase
-- lmbUncaughtExceptionHandlingFilter is registered by default in lmbWebApplication
-- lmbUncaughtExceptionHandlingFilter clears output buffers
-- minor fix in lmbBaseIteratorComponent
-- <active_record:fetch> now catches lmbARNotFoundException and returns an empty dataset if record was not found;
-- NotFoundController now writes 404 header to response;
-- all factories removed and their code moved to lmbWebAppTools
-- lmbSessionMessageBox added, it incapsulates session message box logic previously placed in lmbWebAppTools
-- fixed: lmbViewRenderingFilter missing return statement
-- lmbWebAppTools :: getDefaultDbDSN() now uses lmbConf and db.conf.php configuration file instead of common.ini
-- lmbWebAppTools :: createConf(..) removed in favour of getConf(..)
-- lmbWebAppTools does not create any session storate driver anymore. All this functionality moved to lmbSessionStartupFilter
-- lmbSessionStartupFilter calls lmbSession :: start(), not simply session_start(), this way lmbSession class is present(and lmbSerializable too which is important)
-- lmbWebAppTools :: renderView($template) added
-- lmbWactTemplateConfig now uses wact.conf.php instead of wact.ini
-- lmbSessionStartupFilter now works in different way. It uses native session storage driver by default. If you need to use session db storage driver please define 'LIMB_USE_DB_DRIVER' constant as 'true'
-- lmbFetcher :: fetch(), :: fetchOne() added, these are aliases for getDataSet(), getFirstRecord() respectively, the latter ones are marked obsolete
-- attribute USING for tag <active_record:fetch> is alias for class_path attribute for simplicity. Now you can write <active_record:fetch using='News' .../> instead of <active_record:fetch class_path='News' .../>
-- mostly all non Limb specific tags moved to WACT package (due to #WACT-12)
  * all form tags
  * all core tags, filters
  * all pager tags, props
  * all list props, tags
-- obsolete lmbIniDbDSN removed
-- config stuff moved from lmbWebAppTools to config package toolkit
-- file_schema stuff moved from lmbWebAppTools to file_schema package toolkit
-- lmbBaseCommand :: flashError(), flashMessage(), redirect() methods added
-- /src/generator/lmbPHPTemplate => /src/view/lmbPHPView.class.php
-- obsolete generator stuff removed
-- lmbController :: closePopup() echoes javascript code directly into response, no more close_popup.html dependency
-- tests were splitted into db related ones and plain tests
-- new WACT <perform> tag that allows you execute any method of special classes that inherit from lmbTemplateCommand. This tag can add more control over your templates if necessary.
-- new WACT <find:params> added that allows to pass any params to lmbActiveRecord child classes custom find methods right from template.
-- <request> tag with all properties removed since we don't need them anymore.
-- initial PhpDocs
-- many other minor fixes and improvements

0.1.0-alpha - 14 December 2006
==================================================
-- Initial release of this package.
